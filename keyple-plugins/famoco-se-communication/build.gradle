apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

archivesBaseName = "keyple-android-plugin-famoco-se-communication"

group 'org.eclipse.keyple'
project.description = 'Keyple Plugin based on Famoco Se Communication library'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName project.version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        unitTests {
            returnDefaultValues = true//mock Log Android object
            includeAndroidResources = true
        }
    }

    lintOptions {
        abortOnError false
    }

    //generate output aar with a qualified name : with version number
    libraryVariants.all { variant ->
        variant.outputs.all { output ->
            if (outputFile != null && outputFileName.endsWith('.aar')) {
                outputFileName = "${archivesBaseName}-${version}.aar"
            }
        }
    }

    //create a task to generate javadoc for each variants
    libraryVariants.all { variant ->
        task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
            description "Generates Javadoc for variant ${variant.name.capitalize()}"
            //println "Create Javadoc Task for variant ${variant.name.capitalize()}"

            source = variant.javaCompile.source
            options.links("http://docs.oracle.com/javase/6/docs/api/")
            options.links("http://d.android.com/reference/")

            //println 'classpath : ' + classpath.getFiles()
            //println 'options links : ' + options.links
            //println 'source : ' + source.getFiles()

            // First add all of your dependencies to the classpath, then add the android jars
            doFirst {
                //doFirst is needed else we get the error "Cannot create variant 'android-lint' after configuration" with gradle 4.4+
                classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
            }
            classpath += files(android.getBootClasspath())


            // We're excluding these generated files
            exclude '**/BuildConfig.java'
            exclude '**/R.java'
            failOnError = false
            destinationDir = file("${project.docsDir}/javadoc")
            //destinationDir = file(System.getProperty("user.home") +"/pages")

        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

//build sources jar
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

//declare javadoc and sources jar as artifacts also
artifacts {
    archives androidSourcesJar, javadocJar
}

task installPlugin {
    group 'keyple'
    description 'Builds and installs the keyple Famoco SE Communication library into maven local repository'
    dependsOn ':keyple-plugins:famoco-se-communication:uploadArchives'
}

dependencies {
    implementation files('libs/lib-secommunication-1.7.0.jar')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"

    //Keyple
//    implementation "org.eclipse.keyple:keyple-java-core:$keyple_version"
    implementation "org.eclipse.keyple:keyple-java-commons-api:2.0-SNAPSHOT"
    implementation "org.eclipse.keyple:keyple-java-plugin-api:2.0-SNAPSHOT"
    implementation "org.eclipse.keyple:keyple-java-utils:2.0.0-SNAPSHOT"

    //logging
    implementation "org.slf4j:slf4j-api:$slf4j_api_version"
    implementation "com.jakewharton.timber:timber:$timber_version" //Android
    implementation "com.arcao:slf4j-timber:$slf4j_timber_version@aar" //SLF4J binding for Timber

    testImplementation "junit:junit:$junit_version"
    testImplementation files('libs/lib-secommunication-1.7.0.jar')
    /** Mocking for tests **/
    testImplementation "io.mockk:mockk:$mockk_version"
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: mavenLocal().url)
        }
    }
}
